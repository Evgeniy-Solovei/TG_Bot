from aiogram import types, F, Router
from aiogram.utils.keyboard import InlineKeyboardBuilder
from loader import dp

router_cakes = Router()


@router_cakes.callback_query(F.data == 'cakes')
async def list_cakes(callback: types.CallbackQuery):
    """–ö–Ω–æ–ø–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ—Ä—Ç–æ–≤"""
    cakes = [
        types.InlineKeyboardButton(text='üç∞ –≠—Å—Ç–µ—Ä—Ö–∞–∑–∏', callback_data='esterhazy'),
        types.InlineKeyboardButton(text='üç∞ –ß—ë—Ä–Ω—ã–π –ª–µ—Å', callback_data='black_forest'),
        types.InlineKeyboardButton(text='üç∞ –ù–∞–ø–æ–ª–µ–æ–Ω', callback_data='napoleon'),
    ]
    builder = InlineKeyboardBuilder()
    for cake in cakes:
        builder.row(cake)
    await callback.message.answer("–í—ã–±–µ—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=builder.as_markup(resize_keyboard=True))


cakes_info = {
    'esterhazy': {
        'info': '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ',
        'data': 'üìÜ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏',
    },
    'black_forest': {
        'info': '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ',
        'data': 'üìÜ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏',
    },
    'napoleon': {
        'info': '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ',
        'data': 'üìÜ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏',
    },
}


@dp.callback_query(F.data.in_({'esterhazy', 'black_forest', 'napoleon'}))
async def instance_cake(callback: types.CallbackQuery):
    cake = cakes_info[callback.data]
    buttons = [
        types.InlineKeyboardButton(text=v, callback_data=k)
        for k, v in cake.items()
    ]
    builder = InlineKeyboardBuilder()
    for button in buttons:
        builder.row(button)
    await callback.message.answer('–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç', reply_markup=builder.as_markup(resize_keyboard=True))

    @dp.callback_query(F.data == 'info')
    async def instance_info(callback: types.CallbackQuery):
        await callback.message.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è')

    @dp.callback_query(F.data == 'data')
    async def instance_info(callback: types.CallbackQuery):
        await callback.message.answer('–¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–ø–∏ –ö–∞–ª–µ–Ω–¥–∞—Ä—è')
