from aiogram import types, F, Router
from aiogram.utils.keyboard import InlineKeyboardBuilder
from loader import dp

router_sweets = Router()
@router_sweets.callback_query(F.data == 'sweets')
async def list_sweets(callback: types.CallbackQuery):
    """–ö–Ω–æ–ø–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–µ—Ç"""
    sweets = [
        types.InlineKeyboardButton(text='üç¨ –ò—Ä–∏—Å–∫–∏', callback_data='irish'),
        types.InlineKeyboardButton(text='üç¨ –¢—Ä—é—Ñ–µ–ª—å', callback_data='truffle'),
    ]
    builder = InlineKeyboardBuilder()
    for sweet in sweets:
        builder.row(sweet)
    await callback.message.answer("–í—ã–±–µ—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=builder.as_markup(resize_keyboard=True))


sweets_info = {
    'irish': {
        'info': '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ',
        'data': 'üìÜ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏',
    },
    'Truffle': {
        'info': '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ',
        'data': 'üìÜ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏',
    },
}


@dp.callback_query(F.data.in_({'irish', 'Truffle'}))
async def instance_cake(callback: types.CallbackQuery):
    sweet = sweets_info[callback.data]
    buttons = [
        types.InlineKeyboardButton(text=v, callback_data=k)
        for k, v in sweet.items()
    ]
    builder = InlineKeyboardBuilder()
    for button in buttons:
        builder.row(button)
    await callback.message.answer('–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç', reply_markup=builder.as_markup(resize_keyboard=True))

    @dp.callback_query(F.data == 'info')
    async def instance_info(callback: types.CallbackQuery):
        await callback.message.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è')

    @dp.callback_query(F.data == 'data')
    async def instance_info(callback: types.CallbackQuery):
        await callback.message.answer('–¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–ø–∏ –ö–∞–ª–µ–Ω–¥–∞—Ä—è')
